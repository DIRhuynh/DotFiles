############################################################################
# COPY AND PASTE
# http://robots.thoughtbot.com/tmux-copy-paste-on-os-x-a-better-future
############################################################################
# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

############################################################################
# Global options
############################################################################
# Remap prefix
unbind C-b
set -g prefix C-Space
bind Space send-prefix

# large history
set-option -g history-limit 10000

# colors
setw -g mode-bg black
set-option -g default-terminal "screen-256color"

# utf8 support
set-window-option -g utf8 on

# basic settings
set-window-option -g xterm-keys on # for vim
set-window-option -g mode-keys vi # vi key
set-window-option -g monitor-activity on

# use mouse # More on mouse support http://floriancrouzat.net/2010/07/run-tmux-with-mouse-support-in-mac-os-x-terminal-app/
setw -g mode-mouse on
set -g mouse-select-pane on
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

############################################################################
# Status Bar
############################################################################
set-option -g status-utf8 on
set-option -g status-justify left
set-option -g status-fg default
set-option -g status-bg default
set-option -g status-right '%R %m/%d/%y (#S)'
set-option -g status-left ''

set-window-option -g window-status-fg default
set-window-option -g window-status-bg default
set-window-option -g window-status-attr dim

set-window-option -g window-status-current-fg black
set-window-option -g window-status-current-bg blue
set-window-option -g window-status-current-attr dim

############################################################################
# Unbindings
############################################################################
unbind j
unbind '"' # unbind horizontal split
unbind %   # unbind vertical split

############################################################################
# Bindings
############################################################################
# Reload tmux conf
bind-key r source-file ~/.tmux.conf

# New split in current pane (horizontal / vertical)
bind-key C-x split-window -v # split pane horizontally
bind-key C-v split-window -h # split pane vertically

############################################################################
# Windows
############################################################################
# By default, all windows in a session are constrained to the size of the
# smallest client connected to that session,
# even if both clients are looking at different windows.
# It seems that in this particular case, Screen has the better default
# where a window is only constrained in size if a smaller client
# is actively looking at it.
setw -g aggressive-resize on

############################################################################
# Panes
############################################################################
# Colors
set-option -g pane-border-fg default
set-option -g pane-border-bg default
set-option -g pane-active-border-fg default
set-option -g pane-active-border-bg default

# Navigation
# use the vim motion keys to move between panes
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Resizing
bind-key C-h resize-pane -L 10
bind-key C-j resize-pane -D 10
bind-key C-k resize-pane -U 10
bind-key C-l resize-pane -R 10

